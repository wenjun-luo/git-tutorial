C51 COMPILER V9.59.0.0   TIMER_INIT                                                        01/07/2025 13:17:26 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE TIMER_INIT
OBJECT MODULE PLACED IN .\Objects\Timer_Init.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE c\Timer_Init.c LARGE OMF2 OPTIMIZE(0,SPEED) BROWSE INCDIR(.\H;.\User;.\T
                    -KDriver\C) DEBUG PRINT(.\Listings\Timer_Init.lst) OBJECT(.\Objects\Timer_Init.obj)

line level    source

   1          #include "project.h"
   2          uint8_t  g_flag_1ms = 0;
   3          uint8_t  g_flag_200ms = 0;
   4          uint8_t  g_flag_ms = 0;
   5          uint32_t g_1ms_cnt = 0;
   6          uint32_t l_1ms_cnt = 0;
   7          void Timer_Init(void);
   8          
   9          /*****************************************************
  10           *函数名称：void Timer_Test(void);
  11           *函数功能：T0/T1/T2测试
  12           *入口参数：void
  13           *出口参数：void
  14           *****************************************************/
  15          void Timer_Test(void)
  16          {
  17   1              Timer_Init();
  18   1      }
  19          /*****************************************************
  20           *函数名称：void Timer_Init(void)
  21           *函数功能：T0/T1/T2初始化    目前T0的定时周期为1ms，计数初值为41536，
  22           *入口参数：void
  23           *出口参数：void
  24           *****************************************************/
  25          void Timer_Init(void)
  26          {
  27   1              TMCON = 0X07; //------111 ;Timer0、Tiemr1和Tiemr2选择时钟Fsys
  28   1      
  29   1              // T0设置
  30   1              TMOD |= 0x01;                            // 0000 0001;Timer0设置工作方式1
  31   1              TL0 = (65536 - 12000) % 256; // 溢出时间：时钟为Fsys，则12000*（1/Fsys）=1ms;
  32   1              TH0 = (65536 - 12000) / 256;
  33   1              TR0 = 0;
  34   1              ET0 = 1; // 定时器0允许
  35   1              TR0 = 1; // 打开定时器0
  36   1              
  37   1              // T1设置
  38   1      //      TMOD |= 0x20;    // 0010 0000;Timer1设置工作方式2
  39   1      //      TL1 = 256 - 120; // 溢出时间：时钟为Fsys，则120*（1/Fsys）=10us;
  40   1      //      TH1 = 256 - 120;
  41   1      //      TR1 = 0;
  42   1      //      ET1 = 1; // 定时器1允许
  43   1      //      TR1 = 1; // 打开定时器1
  44   1      
  45   1      
  46   1              // T2设置
  47   1              T2MOD = 0x00;
  48   1              T2CON = 0x00;                                   // 设置为16位重载寄存器
  49   1              RCAP2H = (65536 - 12000) / 256; // 溢出时间：时钟为Fsys，则12000*（1/Fsys）=1ms;
  50   1              RCAP2L = (65536 - 12000) % 256;
  51   1              TR2 = 0;
  52   1              ET2 = 1; // 定时器2允许
  53   1              TR2 = 1; // 打开定时器2
  54   1      
C51 COMPILER V9.59.0.0   TIMER_INIT                                                        01/07/2025 13:17:26 PAGE 2   

  55   1              /*
  56   1              //Timer2捕获功能
  57   1              T2CON = 0X09; //使能EXT2，16位捕获模式
  58   1              T2MOD = 0X00;
  59   1              TH2 = 0X00;
  60   1              TL2 = 0X00;
  61   1              RCAP2H = 0X00;
  62   1              RCAP2L = 0X00;
  63   1              TR2 = 0;
  64   1              ET2 = 1;//定时器2允许
  65   1              TR2 = 1;//打开定时器2
  66   1              */
  67   1      
  68   1              EA = 1;
  69   1      }
  70          
  71          uint32_t get_tick_count()
  72          {
  73   1              return g_1ms_cnt;
  74   1      }
  75          
  76          //ms是否到达，若到达则清空重新累计
  77          uint8_t is_1ms_tick(uint8_t clear)
  78          {
  79   1              if (g_flag_1ms)
  80   1              {
  81   2                      if(clear)
  82   2                              g_flag_1ms = 0;
  83   2                      return 1;
  84   2              }
  85   1              return 0;
  86   1      }
  87          
  88          /**************************************************
  89           *函数名称：void timer0/1/2() interrupt 1/3/5
  90           *函数功能：定时器中断产生方波
  91           *入口参数：void
  92           *出口参数：void
  93           **************************************************/
  94          void timer0() interrupt 1
  95          {
  96   1              static u16 cnt_1ms = 0;
  97   1              TL0 = (65536 - 12000) % 256;   //1200理解为分频值
  98   1              TH0 = (65536 - 12000) / 256;
  99   1              g_1ms_cnt++;
 100   1              if (++cnt_1ms > STEPVALUE )    //STEPVALUE用于PWMDTY1_Set2() 
 101   1              {
 102   2                      cnt_1ms = 0;
 103   2                      g_flag_1ms = 1;
 104   2              }
 105   1      }
 106          
 107          
 108          void timer1() interrupt 3
 109          {
 110   1              TF1 = 0;//溢出清零
 111   1      }
 112          
 113           
 114          //200ms是否到达，若到达则清空重新累计
 115          uint8_t is_200ms_tick(uint8_t clear)
 116          {
C51 COMPILER V9.59.0.0   TIMER_INIT                                                        01/07/2025 13:17:26 PAGE 3   

 117   1              if (g_flag_200ms)
 118   1              {
 119   2                      if(clear)
 120   2                              g_flag_200ms = 0;
 121   2                      return 1;
 122   2              }
 123   1              return 0;
 124   1      }
 125          //ms级别，若到达则清空重新累计
 126          uint8_t is_ms_tick(uint8_t clear)
 127          {
 128   1              if (g_flag_ms)
 129   1              {
 130   2                      if(clear)
 131   2                              g_flag_ms = 0;
 132   2                      return 1;
 133   2              }
 134   1              return 0;
 135   1      }
 136          
 137          void Timer2Int(void) interrupt 5
 138          {  
 139   1              static u16 cnt = 0;
 140   1              static u16 cnt_ms = 0;
 141   1              TF2 = 0; // 溢出清零
 142   1              l_1ms_cnt++;    
 143   1          if (++cnt > 199 )
 144   1              {
 145   2                      cnt = 0;
 146   2                      g_flag_200ms = 1;
 147   2              }
 148   1              if (++cnt_ms > Uart1_RxData[5] )
 149   1              {
 150   2                      cnt_ms = 0;
 151   2                      g_flag_ms = 1;
 152   2              }
 153   1      
 154   1      }
 155          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    519    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     20    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
