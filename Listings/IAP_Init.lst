C51 COMPILER V9.59.0.0   IAP_INIT                                                          01/04/2025 11:59:29 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE IAP_INIT
OBJECT MODULE PLACED IN .\Objects\IAP_Init.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE c\IAP_Init.c LARGE OMF2 OPTIMIZE(0,SPEED) BROWSE INCDIR(.\H;.\User;.\TKD
                    -river\C) DEBUG PRINT(.\Listings\IAP_Init.lst) OBJECT(.\Objects\IAP_Init.obj)

line level    source

   1          #include "H/Function_Init.H"
   2          
   3          //#define IapROM  0x00    //0x00：选择ROM区操作  0x02：选择EEPROM区操作
   4          //#define IapEPPROM  0x02         //0x00：选择ROM区操作  0x02：选择EEPROM区操作
   5          unsigned char code *IapAddr = 0x00;
   6          
   7          void IAPWrite(uint Addr,uchar Value,uchar IAPArea);
   8          uchar IAPRead(uint Addr,uchar IAPArea);
   9          uchar IapReadData = 0x00;   //存放读取的IAP数据
  10          
  11          /*****************************************************
  12          *函数名称：void IAP_Test(uchar Address,uchar IAPArea)
  13          *函数功能：IAP测试
  14          *入口参数：Address,IAPArea
  15          *出口参数：void
  16          *****************************************************/
  17          void IAP_Test(uint Address,uchar IAPArea)
  18          {
  19   1              
  20   1              IAPWrite(Address,0xff,IAPArea);
  21   1              IapReadData = IAPRead(Address,IAPArea);
  22   1              IAPADE = 0x00;       //IAP指针指回ROM区
  23   1              while(1)
  24   1              {
  25   2                      uint x = 50000;
  26   2                      if(IapReadData == 0xff)
  27   2                      {
  28   3                              P20 = ~P20;
  29   3                              while(x--);
  30   3                      }
  31   2                      else
  32   2                      {
  33   3                              P21 = ~P21;
  34   3                      }
  35   2              }
  36   1      }
  37          
  38          /*****************************************************
  39          *函数名称：void IAPWrite(uchar Addr,uchar Value,uchar IAPArea)
  40          *函数功能：IAP写初始化
  41          *入口参数：Addr,Value,IAPArea
  42          *出口参数：void
  43          *****************************************************/
  44          //IAP写操作
  45          void IAPWrite(uint Addr,uchar Value,uchar IAPArea)
  46          {       
  47   1              EA = 0;
  48   1              IAPDAT = Value;      //写入数据Data
  49   1              IAPADH = ((Addr>>8)&0X7F);   //写入地址的高5位
  50   1              IAPADL = Addr;               //写入地址的低8位
  51   1              
  52   1              IAPADE = IAPArea;  //IAPArea=0x00：选择ROM区操作  IAPArea=0x02：选择EEPROM区操作
  53   1              IAPKEY = 240;              //IAP开启保护控制时间
  54   1              IAPCTL = 0x06;     //CPU hold time为2ms，写入操作命令
C51 COMPILER V9.59.0.0   IAP_INIT                                                          01/04/2025 11:59:29 PAGE 2   

  55   1              _nop_();
  56   1              _nop_();
  57   1              _nop_();
  58   1              _nop_();
  59   1              _nop_();
  60   1              _nop_();
  61   1              _nop_();
  62   1              _nop_();
  63   1        _nop_();
  64   1              _nop_();
  65   1              _nop_();
  66   1              _nop_();
  67   1              _nop_();
  68   1              _nop_();
  69   1              _nop_();
  70   1              _nop_();
  71   1              IAPADE = 0x00;      //MOVC指向ROM
  72   1              EA = 1;
  73   1      }
  74          /*****************************************************
  75          *函数名称：uchar IAPRead(uchar Addr,uchar IAPArea)
  76          *函数功能：IAP读初始化
  77          *入口参数：Addr,IAPArea
  78          *出口参数：ReadValue
  79          *****************************************************/
  80          uchar IAPRead(uint Addr,uchar IAPArea)
  81          {
  82   1              uchar ReadValue = 0x00;
  83   1              EA = 0;
  84   1              IAPADE = IAPArea;
  85   1              ReadValue = *(IapAddr+Addr); //读取的数据
  86   1              IAPADE = 0x00;               //MOVC指向ROM
  87   1              EA = 1;
  88   1              return ReadValue;
  89   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    272    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     16    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
